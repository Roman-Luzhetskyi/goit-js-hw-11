{"version":3,"file":"commonHelpers.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["import iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nconst BASE_URL = 'https://pixabay.com/api/';\nconst KEY = '40891115-11d0b88dd3a60afc830d1d27f';\n\nexport async function getPictures(name) {\n  const BASE_URL = 'https://pixabay.com/api/';\n  const KEY = '40891115-11d0b88dd3a60afc830d1d27f';\n\n  if (name.includes(' ')) {\n    name.replace(/\\s+/g, '+');\n  }\n\n  const searchParams = new URLSearchParams({\n    key: KEY,\n    q: name,\n    image_type: 'photo',\n    orientation: 'horizontal',\n    safesearch: true,\n  });\n\n  return fetch(`${BASE_URL}?${searchParams}`).then(res => {\n    if (!res.ok) {\n      throw new Error(res.statusText);\n    }\n    return res.json();\n  });\n}\n","import iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nexport function displayErrorToast() {\n  iziToast.error({\n    title: 'Error',\n    message:\n      'Sorry, there are no images matching your search query. Please try again!',\n  });\n}\n\nexport function createMarkup(arr) {\n  return arr\n    .map(\n      ({\n        webformatURL,\n        largeImageURL,\n        tags,\n        likes,\n        views,\n        comments,\n        downloads,\n      }) =>\n        `<li class=\"gallery-item\">\n          <a class=\"gallery-link\" href=\"${largeImageURL}\">\n            <img\n              class=\"gallery-image\"\n              src=\"${webformatURL}\"\n              alt=\"${tags}\"\n              width=\"360\"\n            />\n          </a>\n          <div class=\"thumb-block\">\n            <div class=\"block\">\n              <h2 class=\"tittle\">Likes</h2>\n              <p class=\"amount\">${likes}</p>\n            </div>\n            <div class=\"block\">\n              <h2 class=\"tittle\">Views</h2>\n              <p class=\"amount\">${views}</p>\n            </div>\n            <div class=\"block\">\n              <h2 class=\"tittle\">Comments</h2>\n              <p class=\"amount\">${comments}</p>\n            </div>\n            <div class=\"block\">\n              <h2 class=\"tittle\">Downloads</h2>\n              <p class=\"amount\">${downloads}</p>\n            </div>\n          </div>\n        </li>`\n    )\n    .join('');\n}\n","import iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nimport { getPictures } from './js/pixabay-api';\nimport { createMarkup, displayErrorToast } from './js/render-functions';\n\nconst formSearch = document.querySelector('.js-search');\nconst listImages = document.querySelector('.js-gallery');\nconst loader = document.querySelector('.js-loader');\n\nloader.style.display = 'none';\nformSearch.addEventListener('submit', onSearch);\n\nfunction onSearch(event) {\n  event.preventDefault();\n  listImages.innerHTML = '';\n  loader.style.display = 'block';\n\n  const inputValue = event.target.elements.search.value.trim();\n\n  if (!inputValue) {\n    loader.style.display = 'none';\n    return;\n  }\n\n  getPictures(inputValue)\n    .then(data => {\n      loader.style.display = 'none';\n\n      if (!data.hits.length) {\n        iziToast.error({\n          title: 'Error',\n          message:\n            'Sorry, there are no images matching your search query. Please try again!',\n        });\n      }\n\n      listImages.innerHTML = ('beforeend', createMarkup(data.hits));\n\n      const refreshPage = new SimpleLightbox('.gallery a', {\n        captions: true,\n        captionsData: 'alt',\n        captionDelay: 250,\n      });\n      refreshPage.refresh();\n\n      formSearch.reset();\n    })\n    .catch(err => {\n      loader.style.display = 'none';\n      console.log(err);\n    });\n}\n"],"names":["getPictures","name","BASE_URL","KEY","searchParams","res","createMarkup","arr","webformatURL","largeImageURL","tags","likes","views","comments","downloads","formSearch","listImages","loader","onSearch","event","inputValue","data","iziToast","SimpleLightbox","err"],"mappings":"6vBAQO,eAAeA,EAAYC,EAAM,CACtC,MAAMC,EAAW,2BACXC,EAAM,qCAERF,EAAK,SAAS,GAAG,GACnBA,EAAK,QAAQ,OAAQ,GAAG,EAG1B,MAAMG,EAAe,IAAI,gBAAgB,CACvC,IAAKD,EACL,EAAGF,EACH,WAAY,QACZ,YAAa,aACb,WAAY,EAChB,CAAG,EAED,OAAO,MAAM,GAAGC,CAAQ,IAAIE,CAAY,EAAE,EAAE,KAAKC,GAAO,CACtD,GAAI,CAACA,EAAI,GACP,MAAM,IAAI,MAAMA,EAAI,UAAU,EAEhC,OAAOA,EAAI,MACf,CAAG,CACH,CCjBO,SAASC,EAAaC,EAAK,CAChC,OAAOA,EACJ,IACC,CAAC,CACC,aAAAC,EACA,cAAAC,EACA,KAAAC,EACA,MAAAC,EACA,MAAAC,EACA,SAAAC,EACA,UAAAC,CACD,IACC;AAAA,0CACkCL,CAAa;AAAA;AAAA;AAAA,qBAGlCD,CAAY;AAAA,qBACZE,CAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAOSC,CAAK;AAAA;AAAA;AAAA;AAAA,kCAILC,CAAK;AAAA;AAAA;AAAA;AAAA,kCAILC,CAAQ;AAAA;AAAA;AAAA;AAAA,kCAIRC,CAAS;AAAA;AAAA;AAAA,cAItC,EACA,KAAK,EAAE,CACZ,CC/CA,MAAMC,EAAa,SAAS,cAAc,YAAY,EAChDC,EAAa,SAAS,cAAc,aAAa,EACjDC,EAAS,SAAS,cAAc,YAAY,EAElDA,EAAO,MAAM,QAAU,OACvBF,EAAW,iBAAiB,SAAUG,CAAQ,EAE9C,SAASA,EAASC,EAAO,CACvBA,EAAM,eAAc,EACpBH,EAAW,UAAY,GACvBC,EAAO,MAAM,QAAU,QAEvB,MAAMG,EAAaD,EAAM,OAAO,SAAS,OAAO,MAAM,OAEtD,GAAI,CAACC,EAAY,CACfH,EAAO,MAAM,QAAU,OACvB,MACD,CAEDjB,EAAYoB,CAAU,EACnB,KAAKC,GAAQ,CACZJ,EAAO,MAAM,QAAU,OAElBI,EAAK,KAAK,QACbC,EAAS,MAAM,CACb,MAAO,QACP,QACE,0EACZ,CAAS,EAGHN,EAAW,UAA0BV,EAAae,EAAK,IAAI,EAEvC,IAAIE,EAAe,aAAc,CACnD,SAAU,GACV,aAAc,MACd,aAAc,GACtB,CAAO,EACW,QAAO,EAEnBR,EAAW,MAAK,CACtB,CAAK,EACA,MAAMS,GAAO,CACZP,EAAO,MAAM,QAAU,OACvB,QAAQ,IAAIO,CAAG,CACrB,CAAK,CACL"}